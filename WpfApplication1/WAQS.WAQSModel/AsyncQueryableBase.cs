//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright (c) Matthieu MEZIL.  All rights reserved.
// matthieu.mezil@live.fr

 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using WCFAsyncQueryableServices.ClientContext.Interfaces.ExpressionSerialization;
using WCFAsyncQueryableServices.ClientContext.Interfaces;

namespace WCFAsyncQueryableServices.ClientContext
{
    internal abstract class AsyncQueryableBase : IAsyncQueryableBase
    {
        public AsyncQueryableBase(IClientContextBase context, SerializableExpression expression, ParameterMode parameterMode, IEnumerable<Func<IAsyncQueryableBase, AsyncQueryableInclude>> includes, IEnumerable<string> withSpecificationsProperties, IEnumerable<string> selectedProperties)
        {
            Context = context;
            Expression = expression;
            ParameterMode = parameterMode;
            Includes = includes ?? Enumerable.Empty<Func<IAsyncQueryableBase, AsyncQueryableInclude>>();
            WithSpecificationsProperties = withSpecificationsProperties ?? Enumerable.Empty<string>();
            SelectedProperties = selectedProperties ?? Enumerable.Empty<string>();
        }
        
        public IClientContextBase Context { get; private set; }
        public SerializableExpression Expression { get; private set; }
        public ParameterMode ParameterMode { get; private set; }
        public abstract Type Type { get; }
        public IEnumerable<Func<IAsyncQueryableBase, AsyncQueryableInclude>> Includes { get; private set; }
        public IEnumerable<string> WithSpecificationsProperties { get; private set; }
        public IEnumerable<string> SelectedProperties { get; private set; }
    }
}
