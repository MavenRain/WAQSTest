//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright (c) Matthieu MEZIL.  All rights reserved.
// matthieu.mezil@live.fr

 

namespace WCFAsyncQueryableServices.SerializableExpressions
{
    public class SerializableExpressionVisitor
    {
        public virtual void Visit(SerializableExpression expression)
        {
            if (expression == null)
                return;
            expression.Visit(this);
        }
    
        protected internal virtual void VisitTypeBinary(SerializableTypeBinaryExpression expression)
        {
            Visit(expression.Expression);
        }
    
        protected internal virtual void VisitBinary(SerializableBinaryExpression expression)
        {
            Visit(expression.Left);
            Visit(expression.Right);
        }
    
        protected internal virtual void VisitConstant(SerializableConstantExpression expression)
        {
        }
    
        protected internal virtual void VisitConstructor(SerializableConstructorExpression expression)
        {
            foreach (var arg in expression.Arguments)
                Visit(arg);
        }
    
        protected internal virtual void VisitEntitySet(SerializableEntitySetExpression expression)
        {
        }
    
        protected internal virtual void VisitLambda(SerializableLambdaExpression expression)
        {
            foreach (var parameter in expression.Parameters)
                Visit(parameter);
            Visit(expression.Body);
        }
    
        protected internal virtual void VisitMethodCall(SerializableMethodCallExpression expression)
        {
            Visit(expression.Source);
            foreach (var parameter in expression.Parameters)
                Visit(parameter);
        }
    
        protected internal virtual void VisitPropertyGetter(SerializablePropertyGetterExpression expression)
        {
            Visit(expression.Source);
        }
    
        protected internal virtual void VisitPropertySetter(SerializablePropertySetterExpression expression)
        {
            Visit(expression.Source);
            Visit(expression.Value);
        }
    
        protected internal virtual void VisitMemberInit(SerializableMemberInitExpression expression)
        {
            Visit(expression.Constructor);
            foreach (var setter in expression.Setters)
                Visit(setter);
        }
    
        protected internal virtual void VisitParameter(SerializableParameterExpression expression)
        {
        }
    
        protected internal virtual void VisitUnary(SerializableUnaryExpression expression)
        {
            Visit(expression.Operand);
        }
    
        protected internal virtual void VisitConditional(SerializableConditionalExpression expression)
        {
            Visit(expression.TestExpression);
            Visit(expression.IfTrueExpression);
            Visit(expression.IfFalseExpression);
        }
    }
}
