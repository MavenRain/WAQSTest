//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright (c) Matthieu MEZIL.  All rights reserved.
// matthieu.mezil@live.fr

 
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using WCFAsyncQueryableServices.EntitiesTracking;
using WCFAsyncQueryableServices.ClientContext.Interfaces.ExpressionSerialization;

namespace WCFAsyncQueryableServices.ClientContext.Interfaces
{
    public interface IClientEntitySet : IEnumerable, IDisposable, INotifyCollectionChanged
    {
        string EntitySetName { get; }
        IClientContext Context { get; }
        SerializableExpression Expression { get; }
    }
        
    public interface IClientEntitySet<ClientContext> : IClientEntitySet
    {
        new ClientContext Context { get; }
        
        void Add(IObjectWithChangeTracker entity);
        void Attach(IObjectWithChangeTracker entity);
        void Remove(IObjectWithChangeTracker entity);
        void Detach(IObjectWithChangeTracker entity);
        void Replace(ref IObjectWithChangeTracker entity);
        
        Func<IObjectWithChangeTracker, object> GetEntityKey { get; }
    }
        
    public interface IClientEntitySet<ClientContext, EntityType> : IClientEntitySet<ClientContext>, IEnumerable<EntityType>
        where EntityType : IObjectWithChangeTracker
    {
        void Add(EntityType entity);
        void Attach(EntityType entity);
        void Remove(EntityType entity);
        void Detach(EntityType entity);
        void Replace(ref EntityType entity);
    }
}
