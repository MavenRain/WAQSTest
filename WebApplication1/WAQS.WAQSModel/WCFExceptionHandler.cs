//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright (c) Matthieu MEZIL.  All rights reserved.
// matthieu.mezil@live.fr

 
using System;
using System.Linq;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.ServiceModel.Dispatcher;
using Microsoft.Practices.ServiceLocation;

namespace WCFAsyncQueryableServices.WCFService
{
    public partial class WCFExceptionHandler : IErrorHandler
    {
    	public bool HandleError(Exception error)
    	{
    		return ! (error is FaultException);
    	}
    	
    	public void ProvideFault(Exception error, MessageVersion version, ref Message fault)
    	{
    		FaultException exception = error as FaultException;
    		if (exception != null)
    			return;
    		exception = WCFAsyncQueryableServices.WCFService.WCFService.GetFaultException(error, ServiceLocator.Current.GetAllInstances<WCFAsyncQueryableServices.Common.IExceptionDetailFactory>().ToDictionary(edf => edf.Type), ed => new WCFAsyncQueryableServices.WCFService.Contract.FaultDetail { ErrorMessage = ed.Message }, fd => DefineFaultDetail(fd));
    		fault = Message.CreateMessage(version, exception.CreateMessageFault(), exception.Action);
    	}
    
    	partial void DefineFaultDetail(WCFAsyncQueryableServices.WCFService.Contract.FaultDetail faultDetail);
    }
}
