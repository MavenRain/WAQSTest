//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright (c) Matthieu MEZIL.  All rights reserved.
// matthieu.mezil@live.fr

 
using System;
using System.Collections.Generic;
using Microsoft.Practices.ServiceLocation;
using Microsoft.Practices.Unity;
using Edm_EntityMappingGeneratedViews;
using WCFAsyncQueryableServices.Common;
using WCFAsyncQueryableServices.DAL;
using WCFAsyncQueryableServices.DAL.Interfaces;
using WCFAsyncQueryableServices.Service;
using WCFAsyncQueryableServices.Service.Interfaces;
using WCFAsyncQueryableServices.Service.L2E;
using WebApplication1.DAL;
using WebApplication1.DAL.Interfaces;
using WebApplication1.Service;
using WebApplication1.Service.Interfaces;
using WebApplication1.WCFService;

namespace WebApplication1
{
    partial class Global
    {
    	public static void WAQSModelApplicationStart(IUnityContainer unityContainer)
    	{
    		using (IDataContext context = new WAQSModelContainer())
    		{
    			context.LoadMetadata();
    		}
    		WAQSModelWAQSModelContainerViewsForBaseEntitySets.ComputeMappingHashValue();
    		IUnityContainer childUnityContainer = unityContainer.CreateChildContainer();
    		childUnityContainer.RegisterType<IWAQSModelContainer, WAQSModelContainer>(new InjectionFactory(c => new WAQSModelContainer()));
    		var serviceParameters = new List<object>() { (Func<IWAQSModelContainer>)(() => childUnityContainer.Resolve<IWAQSModelContainer>()), (Func<IWAQSModelContainer, ISerializableExpressionProvider>)(context => new SerializableExpressionProvider((serializableExpression, withSpecificationsProperties) => SerializableExpressionToL2EExpressionConverter.ToL2EExpression(serializableExpression, withSpecificationsProperties, context, new WebApplication1.Service.L2E.WAQSModelSerializableExpressionConverter(context, new WAQSModelEntitiesFilters(context))), obj => SerializableExpressionToL2EExpressionConverter.Convert(obj), t => SerializableExpressionToL2EExpressionConverter.GetOriginalType(t))), (Func<WAQSModelServiceL2E>)(() => (WAQSModelServiceL2E)childUnityContainer.Resolve<IWAQSModelService>()) };
    		DefineWAQSModelServiceParameters(childUnityContainer, serviceParameters);
    		unityContainer.RegisterType<IWAQSModelService, WAQSModelServiceL2E>(new InjectionConstructor(serviceParameters.ToArray()));
    		unityContainer.RegisterInstance(typeof(WAQSModelWCFService).FullName, childUnityContainer);
    	}
    
    	static partial void DefineWAQSModelServiceParameters(IUnityContainer unityContainer, List<object> parameters);
    }
}
