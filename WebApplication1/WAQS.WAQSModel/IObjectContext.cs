//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright (c) Matthieu MEZIL.  All rights reserved.
// matthieu.mezil@live.fr

 
using System;
using System.Linq.Expressions;
using WCFAsyncQueryableServices.DAL.Interfaces;

namespace WCFAsyncQueryableServices.DAL.Interfaces.L2E
{
    public interface IObjectContext : IDataContext
    {
        MergeOption DefaultMergeOption { get; set; }
        bool UseWAQSProvider { get; set; }
        Expression GetDbDateTimeExpression();
        Expression GetDateExpression(Expression dateTimeExpresion);
        Expression AddYearsExpression(Expression dateTimeExpresion, Expression yearsExpresion);
        Expression AddYearsOffsetExpression(Expression dateTimeOffsetExpresion, Expression yearsExpresion);
        Expression AddMonthsExpression(Expression dateTimeExpresion, Expression monthsExpresion);
        Expression AddMonthsOffsetExpression(Expression dateTimeOffsetExpresion, Expression monthsExpresion);
        Expression AddDaysExpression(Expression dateTimeExpresion, Expression daysExpresion);
        Expression AddDaysOffsetExpression(Expression dateTimeOffsetExpresion, Expression daysExpresion);
        Expression DiffDaysExpression(Expression dateTime1Expresion, Expression dateTime2Expresion);
        Expression DiffDaysOffsetExpression(Expression dateTimeOffset1Expresion, Expression dateTimeOffset2Expresion);
        Expression AddHoursExpression(Expression dateTimeExpresion, Expression hoursExpresion);
        Expression AddHoursOffsetExpression(Expression dateTimeOffsetExpresion, Expression hoursExpresion);
        Expression DiffHoursExpression(Expression dateTime1Expresion, Expression dateTime2Expresion);
        Expression DiffHoursOffsetExpression(Expression dateTimeOffset1Expresion, Expression dateTimeOffset2Expresion);
        Expression AddMinutesExpression(Expression dateTimeExpresion, Expression minutesExpresion);
        Expression AddMinutesOffsetExpression(Expression dateTimeOffsetExpresion, Expression minutesExpresion);
        Expression DiffMinutesExpression(Expression dateTime1Expresion, Expression dateTime2Expresion);
        Expression DiffMinutesOffsetExpression(Expression dateTimeOffset1Expresion, Expression dateTimeOffset2Expresion);
        Expression AddSecondsExpression(Expression dateTimeExpresion, Expression secondsExpresion);
        Expression AddSecondsOffsetExpression(Expression dateTimeOffsetExpresion, Expression secondsExpresion);
        Expression DiffSecondsExpression(Expression dateTime1Expresion, Expression dateTime2Expresion);
        Expression DiffSecondsOffsetExpression(Expression dateTimeOffset1Expresion, Expression dateTimeOffset2Expresion);
        Expression AddMillisecondsExpression(Expression dateTimeExpresion, Expression millisecondsExpresion);
        Expression AddMillisecondsOffsetExpression(Expression dateTimeOffsetExpresion, Expression millisecondsExpresion);
        Expression DiffMillisecondsExpression(Expression dateTime1Expresion, Expression dateTime2Expresion);
        Expression DiffMillisecondsOffsetExpression(Expression dateTimeOffset1Expresion, Expression dateTimeOffset2Expresion);
        Expression AbsInt16Expression(Expression value);
        Expression AbsInt32Expression(Expression value);
        Expression AbsInt64Expression(Expression value);
        Expression AbsSingleExpression(Expression value);
        Expression AbsDoubleExpression(Expression value);
        Expression AbsDecimalExpression(Expression value);
        Expression CeilingDoubleExpression(Expression value);
        Expression CeilingDecimalExpression(Expression value);
        Expression FloorDoubleExpression(Expression value);
        Expression FloorDecimalExpression(Expression value);
        Expression PowDoubleExpression(Expression value, Expression exponent);
        Expression RoundToEvenDoubleExpression(Expression value);
        Expression RoundToEvenDecimalExpression(Expression value);
        Expression RoundToEvenDoubleExpression(Expression value, Expression digits);
        Expression RoundToEvenDecimalExpression(Expression value, Expression digits);
        Expression RoundAwayFromZeroDoubleExpression(Expression value);
        Expression RoundAwayFromZeroDecimalExpression(Expression value);
        Expression RoundAwayFromZeroDoubleExpression(Expression value, Expression digits);
        Expression RoundAwayFromZeroDecimalExpression(Expression value, Expression digits);
        Expression TruncateDoubleExpression(Expression value);
        Expression TruncateDecimalExpression(Expression value);
        Expression LessThanString(Expression s1Expresion, Expression s2Expresion);
        Expression GreaterThanString(Expression s1Expresion, Expression s2Expresion);
        DateTime GetDbDateTime();
        DateTime DbDateTime { get; }
    }
}
