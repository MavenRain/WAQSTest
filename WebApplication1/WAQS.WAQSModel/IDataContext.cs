//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright (c) Matthieu MEZIL.  All rights reserved.
// matthieu.mezil@live.fr

 
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using WCFAsyncQueryableServices.Entities;
using System.Threading.Tasks;

namespace WCFAsyncQueryableServices.DAL.Interfaces
{
    public interface IDataContext : IDisposable
    {
        void SaveChanges(bool acceptChanges = true);
        
        void ApplyChanges<TEntity>(IEntitySet<TEntity> entitySet, TEntity entity) where TEntity : class, IEntity;
    
        Expression GetExpression(Type type, string propertyName, ParameterExpression parameterExpression);
    
        Expression GetExpression(Type type, string methodName, List<Expression> arguments, ParameterExpression parameterExpression);
    
        void AttachRelationship<TEntity1, TEntity2>(TEntity1 entity1, TEntity2 entity2, string collectionName) where TEntity1 : class where TEntity2 : class;
    
        void LoadMetadata();
     
        Task SaveChangesAsync(bool acceptChanges = true);
    }
}
