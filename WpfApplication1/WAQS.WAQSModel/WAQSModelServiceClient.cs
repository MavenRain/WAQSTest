// Copyright (c) Matthieu MEZIL.  All rights reserved.
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WCFAsyncQueryableServices/Query", ClrNamespace = "WCFAsyncQueryableServices.ClientContext.Interfaces.Query")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WCFAsyncQueryableServices/QuerySerialization", ClrNamespace = "WCFAsyncQueryableServices.ClientContext.Interfaces.ExpressionSerialization")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQSModel/SerializableContext", ClrNamespace = "WpfApplication1.ClientContext.Interfaces.Serialization")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQSModel/Entities", ClrNamespace = "WpfApplication1")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WCFAsyncQueryableServices/EntityTracking", ClrNamespace = "WCFAsyncQueryableServices.EntitiesTracking")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WCFAsyncQueryableServices/Querying", ClrNamespace = "WCFAsyncQueryableServices.ClientContext.Interfaces.Querying")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WCFAsyncQueryableServices/QueryResult", ClrNamespace = "WCFAsyncQueryableServices.ClientContext.QueryResult")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQSModel/QueryResult", ClrNamespace = "WpfApplication1.ClientContext.QueryResult")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WAQSModel/Fault", ClrNamespace = "WpfApplication1.ClientContext.Fault")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WCFAsyncQueryableServices/Fault", ClrNamespace = "WCFAsyncQueryableServices.ClientContext.Fault")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://WCFAsyncQueryableServices/Errors", ClrNamespace = "WCFAsyncQueryableServices.ClientContext.Interfaces.Errors")]
// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace WpfApplication1.ClientContext.ServiceReference
{
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WAQSModelServiceClient : System.ServiceModel.ClientBase<global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService>, global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService
    {
        private BeginOperationDelegate onBeginExecuteDelegate;
        private EndOperationDelegate onEndExecuteDelegate;
        private System.Threading.SendOrPostCallback onExecuteCompletedDelegate;
        private BeginOperationDelegate onBeginExecuteManyDelegate;
        private EndOperationDelegate onEndExecuteManyDelegate;
        private System.Threading.SendOrPostCallback onExecuteManyCompletedDelegate;
        private BeginOperationDelegate onBeginLoadPageDelegate;
        private EndOperationDelegate onEndLoadPageDelegate;
        private System.Threading.SendOrPostCallback onLoadPageCompletedDelegate;
        private BeginOperationDelegate onBeginGetDbDateTimeDelegate;
        private EndOperationDelegate onEndGetDbDateTimeDelegate;
        private System.Threading.SendOrPostCallback onGetDbDateTimeCompletedDelegate;
        private BeginOperationDelegate onBeginSaveChangesDelegate;
        private EndOperationDelegate onEndSaveChangesDelegate;
        private System.Threading.SendOrPostCallback onSaveChangesCompletedDelegate;
        private BeginOperationDelegate onBeginValidateEntity1Delegate;
        private EndOperationDelegate onEndValidateEntity1Delegate;
        private System.Threading.SendOrPostCallback onValidateEntity1CompletedDelegate;
        public WAQSModelServiceClient()
        {
        }

        public WAQSModelServiceClient(string endpointConfigurationName): base (endpointConfigurationName)
        {
        }

        public WAQSModelServiceClient(string endpointConfigurationName, string remoteAddress): base (endpointConfigurationName, remoteAddress)
        {
        }

        public WAQSModelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress): base (endpointConfigurationName, remoteAddress)
        {
        }

        public WAQSModelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress): base (binding, remoteAddress)
        {
        }

        public event System.EventHandler<ExecuteCompletedEventArgs> ExecuteCompleted;
        public event System.EventHandler<ExecuteManyCompletedEventArgs> ExecuteManyCompleted;
        public event System.EventHandler<LoadPageCompletedEventArgs> LoadPageCompleted;
        public event System.EventHandler<GetDbDateTimeCompletedEventArgs> GetDbDateTimeCompleted;
        public event System.EventHandler<SaveChangesCompletedEventArgs> SaveChangesCompleted;
        public event System.EventHandler<ValidateEntity1CompletedEventArgs> ValidateEntity1Completed;
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.BeginExecute(WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QuerySerialization query, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginExecute(query, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApplication1.ClientContext.QueryResult.WAQSModelQueryResult global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.EndExecute(System.IAsyncResult result)
        {
            return base.Channel.EndExecute(result);
        }

        private System.IAsyncResult OnBeginExecute(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QuerySerialization query = ((WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QuerySerialization)(inValues[0]));
            return ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).BeginExecute(query, callback, asyncState);
        }

        private object[] OnEndExecute(System.IAsyncResult result)
        {
            WpfApplication1.ClientContext.QueryResult.WAQSModelQueryResult retVal = ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).EndExecute(result);
            return new object[]
            {
            retVal
            }

            ;
        }

        private void OnExecuteCompleted(object state)
        {
            if ((this.ExecuteCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ExecuteAsync(WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QuerySerialization query)
        {
            this.ExecuteAsync(query, null);
        }

        public void ExecuteAsync(WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QuerySerialization query, object userState)
        {
            if ((this.onBeginExecuteDelegate == null))
            {
                this.onBeginExecuteDelegate = new BeginOperationDelegate(this.OnBeginExecute);
            }

            if ((this.onEndExecuteDelegate == null))
            {
                this.onEndExecuteDelegate = new EndOperationDelegate(this.OnEndExecute);
            }

            if ((this.onExecuteCompletedDelegate == null))
            {
                this.onExecuteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteCompleted);
            }

            base.InvokeAsync(this.onBeginExecuteDelegate, new object[]
            {
            query
            }

            , this.onEndExecuteDelegate, this.onExecuteCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.BeginExecuteMany(WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QueriesSerialization queries, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginExecuteMany(queries, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApplication1.ClientContext.QueryResult.WAQSModelQueriesResult global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.EndExecuteMany(System.IAsyncResult result)
        {
            return base.Channel.EndExecuteMany(result);
        }

        private System.IAsyncResult OnBeginExecuteMany(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QueriesSerialization queries = ((WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QueriesSerialization)(inValues[0]));
            return ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).BeginExecuteMany(queries, callback, asyncState);
        }

        private object[] OnEndExecuteMany(System.IAsyncResult result)
        {
            WpfApplication1.ClientContext.QueryResult.WAQSModelQueriesResult retVal = ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).EndExecuteMany(result);
            return new object[]
            {
            retVal
            }

            ;
        }

        private void OnExecuteManyCompleted(object state)
        {
            if ((this.ExecuteManyCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteManyCompleted(this, new ExecuteManyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ExecuteManyAsync(WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QueriesSerialization queries)
        {
            this.ExecuteManyAsync(queries, null);
        }

        public void ExecuteManyAsync(WCFAsyncQueryableServices.ClientContext.Interfaces.Query.QueriesSerialization queries, object userState)
        {
            if ((this.onBeginExecuteManyDelegate == null))
            {
                this.onBeginExecuteManyDelegate = new BeginOperationDelegate(this.OnBeginExecuteMany);
            }

            if ((this.onEndExecuteManyDelegate == null))
            {
                this.onEndExecuteManyDelegate = new EndOperationDelegate(this.OnEndExecuteMany);
            }

            if ((this.onExecuteManyCompletedDelegate == null))
            {
                this.onExecuteManyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteManyCompleted);
            }

            base.InvokeAsync(this.onBeginExecuteManyDelegate, new object[]
            {
            queries
            }

            , this.onEndExecuteManyDelegate, this.onExecuteManyCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.BeginLoadPage(int pageSize, WCFAsyncQueryableServices.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression queryExpression, string[] withSpecificationsProperties, WCFAsyncQueryableServices.ClientContext.Interfaces.Querying.LoadPageParameter[] identifiers, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginLoadPage(pageSize, queryExpression, withSpecificationsProperties, identifiers, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApplication1.ClientContext.QueryResult.WAQSModelQueryResultPage global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.EndLoadPage(System.IAsyncResult result)
        {
            return base.Channel.EndLoadPage(result);
        }

        private System.IAsyncResult OnBeginLoadPage(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int pageSize = ((int)(inValues[0]));
            WCFAsyncQueryableServices.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression queryExpression = ((WCFAsyncQueryableServices.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression)(inValues[1]));
            string[] withSpecificationsProperties = ((string[])(inValues[2]));
            WCFAsyncQueryableServices.ClientContext.Interfaces.Querying.LoadPageParameter[] identifiers = ((WCFAsyncQueryableServices.ClientContext.Interfaces.Querying.LoadPageParameter[])(inValues[3]));
            return ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).BeginLoadPage(pageSize, queryExpression, withSpecificationsProperties, identifiers, callback, asyncState);
        }

        private object[] OnEndLoadPage(System.IAsyncResult result)
        {
            WpfApplication1.ClientContext.QueryResult.WAQSModelQueryResultPage retVal = ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).EndLoadPage(result);
            return new object[]
            {
            retVal
            }

            ;
        }

        private void OnLoadPageCompleted(object state)
        {
            if ((this.LoadPageCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadPageCompleted(this, new LoadPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void LoadPageAsync(int pageSize, WCFAsyncQueryableServices.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression queryExpression, string[] withSpecificationsProperties, WCFAsyncQueryableServices.ClientContext.Interfaces.Querying.LoadPageParameter[] identifiers)
        {
            this.LoadPageAsync(pageSize, queryExpression, withSpecificationsProperties, identifiers, null);
        }

        public void LoadPageAsync(int pageSize, WCFAsyncQueryableServices.ClientContext.Interfaces.ExpressionSerialization.SerializableExpression queryExpression, string[] withSpecificationsProperties, WCFAsyncQueryableServices.ClientContext.Interfaces.Querying.LoadPageParameter[] identifiers, object userState)
        {
            if ((this.onBeginLoadPageDelegate == null))
            {
                this.onBeginLoadPageDelegate = new BeginOperationDelegate(this.OnBeginLoadPage);
            }

            if ((this.onEndLoadPageDelegate == null))
            {
                this.onEndLoadPageDelegate = new EndOperationDelegate(this.OnEndLoadPage);
            }

            if ((this.onLoadPageCompletedDelegate == null))
            {
                this.onLoadPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadPageCompleted);
            }

            base.InvokeAsync(this.onBeginLoadPageDelegate, new object[]
            {
            pageSize, queryExpression, withSpecificationsProperties, identifiers
            }

            , this.onEndLoadPageDelegate, this.onLoadPageCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.BeginGetDbDateTime(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetDbDateTime(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.EndGetDbDateTime(System.IAsyncResult result)
        {
            return base.Channel.EndGetDbDateTime(result);
        }

        private System.IAsyncResult OnBeginGetDbDateTime(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).BeginGetDbDateTime(callback, asyncState);
        }

        private object[] OnEndGetDbDateTime(System.IAsyncResult result)
        {
            System.DateTime retVal = ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).EndGetDbDateTime(result);
            return new object[]
            {
            retVal
            }

            ;
        }

        private void OnGetDbDateTimeCompleted(object state)
        {
            if ((this.GetDbDateTimeCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDbDateTimeCompleted(this, new GetDbDateTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetDbDateTimeAsync()
        {
            this.GetDbDateTimeAsync(null);
        }

        public void GetDbDateTimeAsync(object userState)
        {
            if ((this.onBeginGetDbDateTimeDelegate == null))
            {
                this.onBeginGetDbDateTimeDelegate = new BeginOperationDelegate(this.OnBeginGetDbDateTime);
            }

            if ((this.onEndGetDbDateTimeDelegate == null))
            {
                this.onEndGetDbDateTimeDelegate = new EndOperationDelegate(this.OnEndGetDbDateTime);
            }

            if ((this.onGetDbDateTimeCompletedDelegate == null))
            {
                this.onGetDbDateTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDbDateTimeCompleted);
            }

            base.InvokeAsync(this.onBeginGetDbDateTimeDelegate, null, this.onEndGetDbDateTimeDelegate, this.onGetDbDateTimeCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.BeginSaveChanges(WpfApplication1.ClientContext.Interfaces.Serialization.WAQSModelSerializableContext context, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSaveChanges(context, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WpfApplication1.ClientContext.Interfaces.Serialization.WAQSModelSerializableContext global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.EndSaveChanges(System.IAsyncResult result)
        {
            return base.Channel.EndSaveChanges(result);
        }

        private System.IAsyncResult OnBeginSaveChanges(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WpfApplication1.ClientContext.Interfaces.Serialization.WAQSModelSerializableContext context = ((WpfApplication1.ClientContext.Interfaces.Serialization.WAQSModelSerializableContext)(inValues[0]));
            return ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).BeginSaveChanges(context, callback, asyncState);
        }

        private object[] OnEndSaveChanges(System.IAsyncResult result)
        {
            WpfApplication1.ClientContext.Interfaces.Serialization.WAQSModelSerializableContext retVal = ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).EndSaveChanges(result);
            return new object[]
            {
            retVal
            }

            ;
        }

        private void OnSaveChangesCompleted(object state)
        {
            if ((this.SaveChangesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveChangesCompleted(this, new SaveChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SaveChangesAsync(WpfApplication1.ClientContext.Interfaces.Serialization.WAQSModelSerializableContext context)
        {
            this.SaveChangesAsync(context, null);
        }

        public void SaveChangesAsync(WpfApplication1.ClientContext.Interfaces.Serialization.WAQSModelSerializableContext context, object userState)
        {
            if ((this.onBeginSaveChangesDelegate == null))
            {
                this.onBeginSaveChangesDelegate = new BeginOperationDelegate(this.OnBeginSaveChanges);
            }

            if ((this.onEndSaveChangesDelegate == null))
            {
                this.onEndSaveChangesDelegate = new EndOperationDelegate(this.OnEndSaveChanges);
            }

            if ((this.onSaveChangesCompletedDelegate == null))
            {
                this.onSaveChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveChangesCompleted);
            }

            base.InvokeAsync(this.onBeginSaveChangesDelegate, new object[]
            {
            context
            }

            , this.onEndSaveChangesDelegate, this.onSaveChangesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.BeginValidateEntity1(WpfApplication1.Entity1 entity, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginValidateEntity1(entity, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFAsyncQueryableServices.ClientContext.Interfaces.Errors.Error[] global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService.EndValidateEntity1(System.IAsyncResult result)
        {
            return base.Channel.EndValidateEntity1(result);
        }

        private System.IAsyncResult OnBeginValidateEntity1(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            WpfApplication1.Entity1 entity = ((WpfApplication1.Entity1)(inValues[0]));
            return ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).BeginValidateEntity1(entity, callback, asyncState);
        }

        private object[] OnEndValidateEntity1(System.IAsyncResult result)
        {
            WCFAsyncQueryableServices.ClientContext.Interfaces.Errors.Error[] retVal = ((global::WpfApplication1.ClientContext.ServiceReference.IWAQSModelService)(this)).EndValidateEntity1(result);
            return new object[]
            {
            retVal
            }

            ;
        }

        private void OnValidateEntity1Completed(object state)
        {
            if ((this.ValidateEntity1Completed != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateEntity1Completed(this, new ValidateEntity1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ValidateEntity1Async(WpfApplication1.Entity1 entity)
        {
            this.ValidateEntity1Async(entity, null);
        }

        public void ValidateEntity1Async(WpfApplication1.Entity1 entity, object userState)
        {
            if ((this.onBeginValidateEntity1Delegate == null))
            {
                this.onBeginValidateEntity1Delegate = new BeginOperationDelegate(this.OnBeginValidateEntity1);
            }

            if ((this.onEndValidateEntity1Delegate == null))
            {
                this.onEndValidateEntity1Delegate = new EndOperationDelegate(this.OnEndValidateEntity1);
            }

            if ((this.onValidateEntity1CompletedDelegate == null))
            {
                this.onValidateEntity1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateEntity1Completed);
            }

            base.InvokeAsync(this.onBeginValidateEntity1Delegate, new object[]
            {
            entity
            }

            , this.onEndValidateEntity1Delegate, this.onValidateEntity1CompletedDelegate, userState);
        }
    }
}
