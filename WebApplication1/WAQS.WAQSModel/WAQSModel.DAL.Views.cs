using System;
using System.Data.Entity.Core.Mapping;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Infrastructure.MappingViews;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
[assembly: DbMappingViewCacheTypeAttribute(typeof (WebApplication1.DAL.WAQSModelContainer), typeof (Edm_EntityMappingGeneratedViews.WAQSModelWAQSModelContainerViewsForBaseEntitySets))]
namespace Edm_EntityMappingGeneratedViews
{
    /// <Summary>
        /// The type contains views for EntitySets and AssociationSets that were generated at design time.
        /// </Summary>
    public sealed class WAQSModelWAQSModelContainerViewsForBaseEntitySets : DbMappingViewCache
    {
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
                throw new ArgumentNullException("extent");
            var extentName = extent.EntityContainer.Name + "." + extent.Name;
            if (extentName == "WAQSModelStoreContainer.Entity1")
                return GetView0();
            if (extentName == "WAQSModelContainer.Entity1")
                return GetView1();
            return null;
        }

        /// <Summary>
                /// return view for WAQSModelStoreContainer.Entity1
                /// </Summary>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Entity1
        [WAQSModel.Store.Entity1](T1.Entity1_Id, T1.Entity1_Size, T1.Entity1_Name)
    FROM (
        SELECT 
            T.Id AS Entity1_Id, 
            T.Size AS Entity1_Size, 
            T.Name AS Entity1_Name, 
            True AS _from0
        FROM WAQSModelContainer.Entity1 AS T
    ) AS T1");
        }

        /// <Summary>
                /// return view for WAQSModelContainer.Entity1
                /// </Summary>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Entity1
        [WAQSModel.Entity1](T1.Entity1_Id, T1.Entity1_Size, T1.Entity1_Name)
    FROM (
        SELECT 
            T.Id AS Entity1_Id, 
            T.Size AS Entity1_Size, 
            T.Name AS Entity1_Name, 
            True AS _from0
        FROM WAQSModelStoreContainer.Entity1 AS T
    ) AS T1");
        }

        private static string _mappingHashValue;
        public override string MappingHashValue
        {
            get
            {
                return _mappingHashValue ?? ComputeMappingHashValue();
            }
        }

        public static string ComputeMappingHashValue()
        {
            return _mappingHashValue = ((StorageMappingItemCollection)new WebApplication1.DAL.WAQSModelContainer().MetadataWorkspace.GetItemCollection(DataSpace.CSSpace)).ComputeMappingHashValue();
        }
    }
}
