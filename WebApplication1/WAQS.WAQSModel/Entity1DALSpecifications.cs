//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// Copyright (c) Matthieu MEZIL.  All rights reserved.
// matthieu.mezil@live.fr

 
using System;
using System.Linq;
using System.Linq.Expressions;
using WCFAsyncQueryableServices.Common;
using WebApplication1;
using WebApplication1.DAL.Interfaces;

namespace WebApplication1.DAL
{
    public partial class Entity1DALSpecifications : IEntity1DALSpecifications
    {
        private WAQSModelContainer _context;
    
        public Entity1DALSpecifications(WAQSModelContainer context)
        {
            _context = context;
        }
    
        Expression<Func<WebApplication1.Entity1, int>> IEntity1DALSpecifications.NameLengthExpression
        {
            get { return Entity1DALSpecifications.GetNameLengthExpression(); }
        }
    
        private static Expression<Func<WebApplication1.Entity1, int>> _getNameLengthExpression;
        protected internal static Expression<Func<WebApplication1.Entity1, int>> GetNameLengthExpression(bool isCoalesceEnabled = true)
        {
            if (_getNameLengthExpression == null)
            {
                Expression<Func<WebApplication1.Entity1, int>> exp = (e) => e.Name.Length;
                _getNameLengthExpression = exp;
            }
            GetNameLengthExpression(ref _getNameLengthExpression);
            return _getNameLengthExpression;
        }
        static partial void GetNameLengthExpression(ref Expression<Func<WebApplication1.Entity1, int>> exp);
    
    }
}
